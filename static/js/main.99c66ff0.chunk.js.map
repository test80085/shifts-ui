{"version":3,"sources":["config.js","components/general/Footer.js","components/general/Header.js","components/page-submissions/submission-table/Table Item.js","components/page-submissions/submission-table/Table Row.js","components/page-submissions/submission-table/Table.js","components/general/chooseBakar.js","scripts.js","components/general/chooseWeek.js","components/page-submissions/Modal.js","components/page-submissions/Main.js","components/page-submissions/App.js","components/general/useWindowDimensions.js","components/page-management/constraction-table/Table Item.js","components/page-management/constraction-table/Table Row.js","components/page-management/constraction-table/Table.js","components/page-management/blocks-table/Table Item.js","components/page-management/blocks-table/Table Row.js","components/page-management/blocks-table/Table.js","components/page-management/Tab1/ShowContraintOf.js","components/page-management/Tab1/Alerts/Alert-NoBakarimDB.js","components/page-management/Tab1/Alerts/Alert-NoShifts.js","components/page-management/Tab1/Alerts/Alert-NoSubmit.js","components/page-management/Tab1/Alerts/Alert-8-8s.js","components/page-management/Tab1/Modal.js","components/page-management/Tab1/Tab1-construction.js","components/page-management/Tab2-specials.js","components/general/Pagination.js","components/page-management/Tab3-constraints.js","components/page-management/shifts-table/Table Item.js","components/page-management/shifts-table/Table Row.js","components/page-management/shifts-table/Table.js","components/page-management/mini-table/Table.js","components/page-management/Tab4-history.js","components/page-management/App.js","components/page-admin/List Item.js","components/page-admin/Main.js","components/page-admin/App.js","components/general/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["routeURLs","App","Nav","style","textAlign","to","url","props","title","id","header","type","name","className","for","listItems","Array","from","v","k","map","i","table_rows","shift","day_titles","day","Table","striped","bordered","hover","withTitle","Form","Label","column","xs","Row","Col","Control","as","onChange","showChooseBakar","value","disabled","selected","bakarim","addNew","getCurrentMonth","date","Date","getFullYear","getMonth","slice","getWeek","plusWeeks","year","setHours","setDate","getDate","getDay","week1","Math","round","getTime","weekToString","week","y","w","d1","numOfdaysPastSinceLastMonday","d","getWeek2","rangeIsFrom","min","defaultValue","defaultWeek","required","titles","buttonTexts","floor","random","length","Modal","show","onHide","handleClose","animation","Header","closeButton","Title","Body","Footer","Button","variant","onClick","autoFocus","useState","isModalShown","setShowModal","form","useRef","window","location","reload","Jumbotron","ref","onSubmit","e","preventDefault","data","FormData","current","fetch","method","body","then","res","json","catch","error","alert","Group","sm","rows","setBakarim","useEffect","emps","val","full_name","Main","getWindowDimensions","windowWidth","innerWidth","windowHeight","innerHeight","dictionary","label","setIsRequired","myValue","setMyValue","customStyles","multiValue","provided","backgroundColor","styles","placeholder","options","handleChange","isMulti","tabIndex","autoComplete","display","opacity","height","JSON","stringify","getID","defaultConstraints","keys","defaultUnavailable","suggestions","setSuggestions","values","shiftID","ignore","bakarimLists","filter","bakar","shifts","list","setShowAlert2","updateTable","size","x","blocks","color","comments","items","curItem","setCurItem","Container","fluid","md","isHeader","target","showAlert","setShowAlert","Alert","onClose","dismissible","Heading","Link","href","count","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","setData","isLoaded","setLoaded","setIgnore","setWeek","showAlert2","showAlert3","setShowAlert3","empConstraints","setEmpConstraints","remain_bakarim","setRB","result","submitted","remain","includes","constraints","cons","setConsJumbo","timer","setTimeout","clearTimeout","consJumbo","_88count","Check","checked","Spinner","itemsPerPage","curPage","setCurPage","pagesPerSection","curSection","setCurSection","maxPage","max","maxSection","Pagination","dir","First","Prev","newPage","Item","key","active","Ellipsis","newSection","page","index","Next","Last","setItems","handleChangeWeek","secondSelect","setSecondSelect","pagination","autofocus","item","setStyle","onDoubleClick","counts","_88","specials","Object","shift_counts","_8_8_shifts","setKey","setShifts","setDict","dict","short_name","Tabs","margin","maxWidth","defaultActiveKey","activeKey","onSelect","Tab","eventKey","lineNumber","isEditable","removeSelf","fullName","setFullName","shortName","setShortName","backGroundColor","setBGColor","maxLength","padding","width","original","setOriginal","setisEditable","_","clone","newBakarim","removeBakar","exact","path","component","Submission","Management","AdminPage","PageNotFound","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.99c66ff0.chunk.js","sourcesContent":["export const myConfig = {\n    bakarim: ['גיא שמיליאן', 'יהונתן סימיאן', 'שגב ברטשנידר', 'דקל דיין', 'אסף שטיין', 'דניאל מזרחי', 'אלדר תוהמי'],\n    bakarim_short: ['שמיליאן', 'יוני', 'שגב', 'דקל', 'אסף', 'דניאל', 'אלדר'],\n    anotherVariable: ''\n};\n\nexport const routeURLs = {\n    submissionPage: \"/submission\",\n    managementPage: \"/management\",\n    adminPage: \"/admin\"\n};","import React from 'react';\nimport NavLink from 'react-router-dom/NavLink';\nimport { routeURLs as url } from '../../config';\nimport Nav from 'react-bootstrap/Nav'\n\nfunction App() {\n  return (\n    <footer>\n      <div>\n        <h6>Created by Guy Shamilian & Yehonatan Simian © 2020</h6>\n        {/* <h6 dir='ltr'>Special thanks to Bana ♥</h6> */}\n        <Nav>\n          <ul style={{textAlign: \"right\"}}>\n            <li><NavLink to={url.submissionPage}>הגשת משמרות</NavLink></li>\n            <li><NavLink to={url.managementPage}>ניהול משמרות</NavLink></li>\n            <li><NavLink to={url.adminPage}>סתם ניהול</NavLink></li>\n          </ul>\n        </Nav>\n      </div>\n    </footer>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\n\nfunction App(props) {\n  return (\n    <header>\n      <h1>{props.title}</h1>\n    </header>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport './checkbox.css'\n\nfunction App(props) {\n  let id = props.id\n  if (props.header === 'ערב') id++\n  else if (props.header === 'לילה') id += 2\n\n  return (\n    <td>\n      <input type=\"checkbox\" name={\"shift-\"+id} id={\"shift-\"+id} className=\"check-box\" />\n      <label for={\"shift-\"+id}></label>\n    </td>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport Item from './Table Item';\n\nfunction App(props) {\n  const numbers = Array.from(Array(7), (v,k) => k *= 3)\n  // numbers = [0, 3, 6, 9, 12, 15, 18]\n  const listItems = numbers.map((i) =>\n    <Item header={props.header} id={i} />\n  )\n\n  return (\n    <tr>\n      <th>{props.header}</th>\n      {listItems}\n    </tr>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport Row from './Table Row.js'\nimport Table from 'react-bootstrap/Table'\n\nfunction App() {\n  const shifts = [\"בוקר\", \"ערב\", \"לילה\"]\n  const table_rows = shifts.map((shift) => \n    <Row header={shift} />\n  )\n  const days = [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"]\n  const day_titles = days.map((day) => \n    <th>{day}</th>\n  )\n  return (\n    <div>\n      <Table striped bordered hover>\n        <tr>\n          <th></th>\n          {day_titles}\n        </tr>\n\n        {table_rows}\n\n      </Table>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\n\nfunction App(props) {\n    const title = props.withTitle ? <Form.Label column xs=\"3\">בקר/ית: </Form.Label> : null;\n\n    return (\n        <Form.Row>\n            {title}\n            <Col xs=\"9\">\n                <Form.Control\n                    as=\"select\"\n                    name=\"name\"\n                    onChange={props.onChange}\n                >\n                    {props.showChooseBakar ? <option value=\"\" disabled selected>בחר/י בקר/ית</option> : ''}\n                    {props.bakarim.map((name) => \n                        <option value={name}>{name}</option>\n                    )}\n                    {props.addNew ?\n                        <>\n                            <option disabled>--------</option>\n                            <option value=\"addNew\">הוספת בקר/ית חדש/ה</option>\n                        </>\n                    : ''}\n                </Form.Control>\n            </Col>\n        </Form.Row>\n    );\n}\n\n\nexport default App;\n","export function getCurrentMonth()\n{\n    let date = new Date()\n    return date.getFullYear()+\"-\"+(\"0\" + (date.getMonth() + 1)).slice(-2)\n}\n\nexport function getWeek(plusWeeks)\n{   \n    //currentWeek = getWeek(0), nextWeek = getWeek(1)...\n    let date = new Date()\n    let year = date.getFullYear()\n    date.setHours(0, 0, 0, 0)\n    date.setDate(date.getDate() + 3 + (7 * plusWeeks) - (date.getDay() + 6) % 7);\n    let week1 = new Date(date.getFullYear(), 0, 4);\n    let week = 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000\n    - 3 + (week1.getDay() + 6) % 7) / 7)\n    return year+\"-W\"+week;\n}\n\nconst getWeek2 = (d) => {\n    let date = new Date(d.getTime())\n    date.setHours(0, 0, 0, 0)\n    date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7)\n    let week1 = new Date(date.getFullYear(), 0, 4)\n    return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7)\n}\n\nexport function weekToString(week)\n{\n    let y = week.slice(0,4)\n    let w = week.slice(6,8)\n    let d1 = new Date(''+y+'') \n    let numOfdaysPastSinceLastMonday = d1.getDay() - 1\n    d1.setDate(d1.getDate() - numOfdaysPastSinceLastMonday)\n    d1.setDate(d1.getDate() + (7 * (w - getWeek2(d1)) - 1))\n    let rangeIsFrom = d1.getDate() + \"/\" + (d1.getMonth() + 1) + \"/\" + d1.getFullYear()\n    d1.setDate(d1.getDate() + 6);\n    let rangeIsTo = d1.getDate() + \"/\" + (d1.getMonth() + 1) + \"/\" + d1.getFullYear() \n    return rangeIsTo + \" - \" + rangeIsFrom;\n}\n\nexport default null;","import React from 'react';\nimport { getWeek } from '../../scripts.js';\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\n\nfunction App(props) {\n    return (\n        <Form.Row>\n            {props.withTitle && <Form.Label column xs=\"3\">שבוע: </Form.Label>}\n            <Col xs=\"9\">\n                <Form.Control\n                    type=\"week\" // TODO: make it from sunday to saturday\n                    id=\"week\" \n                    name=\"week\"\n                    min=\"2020-W01\" \n                    defaultValue={props.week ? props.week : getWeek(props.defaultWeek)}\n                    onChange={props.onChange}\n                    required\n                />\n            </Col>\n        </Form.Row>\n    );\n}\n\n\nexport default App;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nfunction App(props) {\n    const titles = ['תודה רבה', 'תודוש', 'אש עליך', 'יפה מאוד', 'הצליח לך הפעם']\n    const bodyText = 'המשמרות הוגשו בהצלחה'\n    const buttonTexts = ['אחלה', 'מגניב', 'יש לי טחורים', 'ווהוווו', 'ביי', 'אסטה לה ווינדוס וויסטה']\n    let title = titles[Math.floor(Math.random() * titles.length)] + '!'\n    return (\n        <Modal show={props.show} onHide={props.handleClose} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{textAlign: \"right\"}}>{bodyText}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={props.handleClose} autoFocus>\n                    {buttonTexts[Math.floor(Math.random() * buttonTexts.length)]}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\n\nexport default App;\n","import React, { useState, useRef } from 'react'\nimport Table from './submission-table/Table'\nimport ChooseBakar from '../general/chooseBakar'\nimport ChooseWeek from '../general/chooseWeek'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Modal from './Modal'\n\nfunction App(props) {\n    const [isModalShown, setShowModal] = useState(false)\n    const hideModal = () => {\n        setShowModal(false)\n        window.location.reload()\n    }\n\n    const form = useRef(null)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        let data = new FormData(form.current)\n        fetch('/submitconstraints', {method: 'POST', body: data})\n        .then(res => res.json())\n        .then(data => {\n            setShowModal(true)\n        })\n        .catch(error => {\n            alert('משהו נדפק, המשמרות לא הוגשו בהצלחה :(')\n        })\n    }\n\n    return (\n        <main>\n            <Modal show={isModalShown} handleClose={hideModal} />\n            <Jumbotron>\n                <Form ref={form} onSubmit={handleSubmit} method='POST'>\n                    <Form.Group>\n                        <Col sm=\"6\"><ChooseBakar withTitle={true} bakarim={props.bakarim}/></Col>\n                    </Form.Group>\n                    <Form.Group>\n                        <Col sm=\"6\"><ChooseWeek defaultWeek={1} withTitle={true}/></Col>\n                    </Form.Group>\n                    <Form.Group>\n                        <Table />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Row>\n                            <Form.Label>הערות: </Form.Label>\n                            <Form.Control as=\"textarea\" name='comments' rows=\"4\" />\n                        </Form.Row>\n                    </Form.Group>\n                    <Button variant=\"outline-primary\" type=\"submit\">שלח/י</Button>\n                </Form>\n            </Jumbotron>\n        </main>\n    );\n}\n\nexport default App;\n","import React, {useState, useEffect} from 'react';\nimport Header from '../general/Header.js';\nimport Main from \"./Main.js\";\nimport '../../App.css';\n\nfunction App() {\n  const [bakarim, setBakarim] = useState([])\n  useEffect(() => {\n    fetch('/getemployees', {method: 'GET'})\n    .then(res => res.json())\n    .then(data => {\n        let emps = data['all_emps'].map(val => val.full_name)\n        setBakarim(emps)\n    })\n    .catch(error => {\n        alert(\"couldn't get bakarim from DB: \" + error)\n    })\n  }, [])\n\n  return (\n    <div>\n      <Header title=\"טופס הגשת משמרות שבועיות\" />\n      <Main bakarim={bakarim}/>\n    </div>\n  );\n}\n\nexport default App;\n","import {useState, useEffect} from 'react'\n\nconst getWindowDimensions = () => {\n    const { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n    return {\n      windowWidth,\n      windowHeight\n    };\n  }\n  \n  export default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n  \n    useEffect(() => {\n      let handleResize = () => {\n        setWindowDimensions(getWindowDimensions())\n      }\n  \n      window.addEventListener(\"resize\", handleResize)\n      return () => window.removeEventListener(\"resize\", handleResize)\n    }, []);\n  \n    return windowDimensions;\n  }","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\n\nfunction App(props) {\n  const dictionary = props.dictionary\n  const bakarim = props.bakarim.map(name => ({value: name, label: dictionary[\"short \" + name]}))\n  const temp = bakarim.length === 1 ? { value: bakarim[0], label: bakarim[0] } : undefined\n\n  const [isRequired, setIsRequired] = useState(true)\n  const [myValue, setMyValue] = useState(/*temp*/)\n  \n  useEffect(() => {\n    setMyValue(null)\n  }, [props.week])\n\n  const customStyles = {\n    /*option: (provided, {data}) => ({\n      ...provided,\n      backgroundColor: dictionary[data.value],\n    }),*/\n    multiValue: (provided, {data}) => ({\n      ...provided,\n      backgroundColor: dictionary[data.value],\n    })\n  }\n\n  return (\n    <td>\n      <>\n        <Select\n          className=\"select-bakarim\"\n          styles={customStyles}\n          placeholder={'-'+bakarim.length+'-'}\n          value={myValue}\n          options={bakarim}\n          onChange={value => {\n            props.handleChange(value, props.id)\n            setIsRequired(value == null || value.length === 0)\n            setMyValue(value)\n          }}\n          isMulti\n        />\n          {\n            <input\n              name={\"shift-\"+props.id}\n              tabIndex={-1}\n              autoComplete=\"off\"\n              style={{ display: \"none\", opacity: 0, height: 0 }}\n              value={JSON.stringify(myValue)}\n              // required={isRequired}\n            />\n          }\n      </>\n    </td>\n  )\n}\n\n\nexport default App;\n","import React from 'react';\nimport Item from './Table Item';\n\nfunction App(props) {\n  const getID = (i) => {\n    let id = i\n    if (props.header === 'ערב') id++\n    else if (props.header === 'לילה') id += 2\n    return id\n  }\n\n  const numbers = [0, 3, 6, 9, 12, 15, 18];\n  const listItems = numbers.map((i) => \n    <Item\n      header={props.header}\n      bakarim={props.bakarim[getID(i)]}\n      dictionary={props.dictionary}\n      id={getID(i)}\n      week={props.week}\n      handleChange={props.handleChange}/>\n  )\n\n  return (\n    <tr>\n      <th>{props.header}</th>\n      {listItems}\n    </tr>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from 'react'\nimport Row from './Table Row'\nimport Table from 'react-bootstrap/Table'\nimport _ from 'lodash'\n\nfunction App(props) {\n  //const bakarimDB = props.bakarim == undefined ? [] : props.bakarim\n  const bakarim = props.bakarim.map(value => value.full_name)\n  const defaultConstraints = Array.from(Array(21).keys()).map(i => bakarim)\n  const defaultUnavailable = Array.from(Array(21).keys()).map(i => [])\n\n  let constraints = defaultConstraints\n  let unavailable = defaultUnavailable\n  // suggestions = constraints - unavailable\n  const [suggestions, setSuggestions] = useState(defaultConstraints)\n  let curState = defaultUnavailable // tracking the table\n\n  const upsert = (array, list) => {\n    list.forEach(item => {\n      let i = array.findIndex(_item => _item.id === item.id)\n      if (i === -1) array.push(item)\n    })\n  }\n\n  const updateUnavailable = (id) => {\n    let unAv = []\n    let min = Math.max(id - 2, 0)\n    let max = Math.min(id + 2, 20)\n    Array.from(Array(max - min + 1).keys()).map(i => \n      upsert(unAv, curState[i + min])\n    )\n\n    unavailable[id] = unAv\n  }\n\n  const handleChange = (values, shiftID) => {\n    return null\n    curState[shiftID] = (values === null) ? [] : values.map(val => val.value)\n    let min = Math.max(shiftID - 2, 0)\n    let max = Math.min(shiftID + 2, 20)\n    Array.from(Array(max - min + 1).keys()).map(i => {\n      updateUnavailable(i + min) \n    })\n    alert(JSON.stringify(curState))\n    ///////////////////////////////////////////////////////////\n    //                                                       //\n    //   for some reason, curState is affected by line 34.   //\n    //   I don't understand why. fuck this.                  //\n    //                                                       //\n    ///////////////////////////////////////////////////////////\n\n    \n    let newSuggestions = constraints.map((list, shiftNumber) =>\n      _.difference(list, unavailable[shiftNumber])\n    )\n    setSuggestions(newSuggestions)\n  }\n\n  const updateTable = (ignore) => {\n    curState = defaultUnavailable\n    unavailable = defaultUnavailable\n\n    if (ignore)\n    {\n        constraints = defaultConstraints\n        setSuggestions(defaultConstraints)\n    }\n    else\n    {\n      try {\n        let bakarimLists = Array.from(Array(21).keys())\n          .map(i => bakarim\n          .filter(bakar => props.data\n          .filter(v => v.name === bakar)[0].shifts[i]==null))\n        constraints = bakarimLists\n        setSuggestions(bakarimLists)\n        bakarimLists.map(list => list.length === 0 ? props.setShowAlert2(true) : void 0)\n      }\n      catch (error) {\n        constraints = defaultConstraints\n        unavailable = defaultUnavailable\n        setSuggestions(defaultConstraints)\n      }    \n    }\n  }\n\n  useEffect(() => {\n    updateTable(props.ignore)\n  }, [props.week, props.ignore])\n\n  const shifts = [\"בוקר\", \"ערב\", \"לילה\"]\n  const days = [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"]\n\n  return (\n    <div>\n      <Table className=\"q\" striped bordered hover size=\"sm\">\n        <tr>\n          <th></th>\n          {days.map((day) => \n            <th>{day}</th>\n          )}\n        </tr>\n        {shifts.map((shift) =>\n          <Row\n            header={shift}\n            week={props.week}\n            bakarim={suggestions}\n            dictionary={props.dictionary}\n            handleChange={handleChange}/>\n        )}\n      </Table>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nfunction App(props) {\n  let id = props.id\n  if (props.header === 'ערב') id++\n  else if (props.header === 'לילה') id += 2\n\n  const x = (props.blocks[id] === 'on' ? 'X' : '')\n\n  return (\n    <td>\n      <h5 style={{color: \"red\"}}>{x}</h5>\n    </td>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport Item from './Table Item';\n\nfunction App(props) {\n  const numbers = [0, 3, 6, 9, 12, 15, 18];\n  const listItems = numbers.map((i) =>\n    <Item header={props.header} id={i} blocks={props.blocks}/>\n  )\n\n  return (\n    <tr>\n      <th>{props.header}</th>\n      {listItems}\n    </tr>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport Row from './Table Row.js'\nimport Table from 'react-bootstrap/Table'\nimport Form from 'react-bootstrap/Form'\nimport {weekToString} from '../../../scripts'\n\nfunction App(props) {\n  const shifts = [\"בוקר\", \"ערב\", \"לילה\"]\n  const days = [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"]\n  const week = weekToString(props.week)\n\n  return (\n    <Form.Group className=\"ready-table\">\n      <h4>טבלת החסימות של {props.name} לשבוע {week}</h4>\n      <Table striped bordered hover>\n        <tr>\n          <th></th>\n          {days.map((day) => \n            <th>{day}</th>\n          )}\n        </tr>\n\n        {shifts.map((shift) => \n          <Row header={shift} blocks={props.blocks}/>\n        )}\n\n      </Table>\n      <Form.Control\n        as=\"textarea\"\n        className=\"unresizeable\"\n        disabled>{props.comments}</Form.Control>\n    </Form.Group>\n  );\n}\n\nexport default App;\n","import React, {useState} from 'react'\nimport BlocksTable from '../blocks-table/Table'\nimport ChooseBakar from '../../general/chooseBakar.js'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\nfunction App(props) {\n    const items = props.items\n    const [curItem, setCurItem] = useState()\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col md=\"6\"><h3>הצג אילוץ של הבקר/ית: </h3></Col>\n                <Col md=\"6\"><ChooseBakar \n                                title=\"הצג טבלת אילוצים של הבקר/ית: \"\n                                bakarim={props.bakarim.map(val => val.full_name)}\n                                isHeader\n                                showChooseBakar\n                                onChange={e => setCurItem(items[e.target.value])} /></Col>\n            </Row>\n            <br></br>\n            <Row>\n                {curItem && <BlocksTable\n                                    name={curItem.name}\n                                    week={props.week}\n                                    blocks={curItem.shifts}\n                                    comments={curItem.comments}/>}\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;\n","import React, {useState} from 'react';\nimport Alert from 'react-bootstrap/Alert'\nimport { routeURLs as url } from '../../../../config'\n\nfunction App() {\n    const [showAlert, setShowAlert] = useState(true)\n\n    return (\n        showAlert &&\n        <Alert variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\n            <Alert.Heading>אופס! נראה כי אין בכלל בקרים בדאטאבייס :O</Alert.Heading>\n            <h6>נסו <Alert.Link href={url.adminPage}>להכניס בקרים למאגר</Alert.Link> על מנת שתוכלו להכין משמרות.</h6>\n        </Alert>\n    );\n}\n\n\nexport default App;\n","import React, {useState, useEffect} from 'react';\nimport Alert from 'react-bootstrap/Alert'\nimport {weekToString} from '../../../../scripts'\n\nfunction App(props) {\n    const [showAlert, setShowAlert] = useState(true)\n    const week = weekToString(props.week)\n\n    useEffect(() => {\n        setShowAlert(true)\n    }, [week])\n\n    return (\n        showAlert ? \n            props.bakarim.length > 0 ?\n            <Alert variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\n                <Alert.Heading>הבקרים הבאים טרם הגישו משמרות לשבוע {week}:</Alert.Heading>\n                <p>\n                    <ul style={{textAlign: \"right\"}} >\n                        {props.bakarim}\n                    </ul>\n                </p>\n            </Alert>\n            :\n            <Alert variant=\"success\" onClose={() => setShowAlert(false)} dismissible>\n                <Alert.Heading>הידד! כל הבקרים הגישו משמרות לשבוע {week} :)</Alert.Heading>\n            </Alert>\n        : ''\n    );\n}\n\n\nexport default App;\n","import React, {useState, useEffect} from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nfunction App(props) {\n    const [showAlert, setShowAlert] = useState(props.showAlert)\n\n    useEffect(() => {\n        setShowAlert(props.showAlert)\n    }, [props.showAlert])\n\n    return (\n        showAlert &&\n        <Alert variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\n            <Alert.Heading>אבוי! משמרת אחת או יותר נחסמו ע\"י כל הבקרים :(</Alert.Heading>\n        </Alert>\n    );\n}\n\n\nexport default App;\n","import React, {useState, useEffect} from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nfunction App(props) {\n    const count = props.count\n    const [showAlert, setShowAlert] = useState(count !== 0)\n\n    useEffect(() => {\n        setShowAlert(count !== 0)\n    }, [props.count])\n\n    return (\n        showAlert &&\n        <Alert variant=\"warning\" onClose={() => setShowAlert(false)} dismissible>\n            <Alert.Heading>שים לב, יש {props.count} בקרים שעושים 8-8.</Alert.Heading>\n        </Alert>\n    );\n}\n\n\nexport default App;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nfunction App(props) {\n    const titles = ['תודה רבה', 'תודוש', 'אש עליך', 'יפה מאוד', 'כל הכבוד']\n    const bodyText = 'הסידור הוגש בהצלחה'\n    const buttonTexts = ['יאייייי', 'יאללה צא צא', 'הוגש אתה אומר?', 'יוני המלך', 'הבשר טעים יותר מלוח', 'פצצה']\n    let title = titles[Math.floor(Math.random() * titles.length)] + '!'\n    return (\n        <Modal show={props.show} onHide={props.handleClose} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{textAlign: \"right\"}}>{bodyText}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={props.handleClose} autoFocus>\n                    {buttonTexts[Math.floor(Math.random() * buttonTexts.length)]}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\n\nexport default App;\n","import React, {useState, useEffect, useRef } from 'react'\nimport useWindowDimensions from '../../general/useWindowDimensions'\nimport Table from '../constraction-table/Table'\nimport ShowConstraintOf from './ShowContraintOf'\nimport NoBakarimDBAlert from './Alerts/Alert-NoBakarimDB'\nimport NoShiftsAlert from './Alerts/Alert-NoShifts'\nimport NoSubmitAlert from './Alerts/Alert-NoSubmit'\nimport _88Alert from './Alerts/Alert-8-8s'\nimport SuccessModal from './Modal'\nimport ChooseWeek from '../../general/chooseWeek.js'\nimport { Container, Col, Form, Jumbotron, Button, Spinner } from 'react-bootstrap'\nimport { getWeek } from '../../../scripts'\n\nfunction App(props) {\n    const {windowWidth} = useWindowDimensions()\n    const minWindowSize = 1420.69\n    const form = useRef(null)\n    const [data, setData] = useState([])\n    const [isLoaded, setLoaded] = useState(false)\n    const [ignore, setIgnore] = useState(false)\n    const [week, setWeek] = useState(null)\n    const [showAlert2, setShowAlert2] = useState(false)\n    const [showAlert3, setShowAlert3] = useState(false)\n    const [empConstraints, setEmpConstraints] = useState({})\n    const [remain_bakarim, setRB] = useState([]) \n    useEffect(() => {\n        if (week == null) return\n        setLoaded(false)\n        fetch(\"/weekconstraints?week=\"+week, {method: 'GET'})\n        .then(res => res.json())\n        .then((result) => {\n            let data = result['week_constraints']\n            setData(data)\n            let submitted = data.map(val => val.name)\n            let remain = [...props.bakarim.map(value => value.full_name).filter(x => !submitted.includes(x))]\n            setRB(remain.map(val => <li>{val}</li>))\n\n            let constraints = {}\n            data.map(cons => \n                constraints[cons.name] = {\n                    'name': cons.name,\n                    'shifts': cons.shifts,\n                    'comments': cons.comments\n                }\n            )\n            setEmpConstraints(constraints)\n            setConsJumbo(<ShowConstraintOf week={week} items={constraints} bakarim={props.bakarim} />)\n            setLoaded(true)\n        })\n        .catch(error => {\n            alert(\"tab1 error: \" + error)\n            setLoaded(true)\n        })\n    }, [week])\n\n    useEffect(() => {\n        if (props.bakarim.length !== 0) {\n            setShowAlert3(false)\n            setWeek(getWeek(1))\n        }\n        else\n        {\n            const timer = setTimeout(() => {\n                setShowAlert3(true)\n                setLoaded(true)\n            }, 5000)\n            return () => clearTimeout(timer)\n        }\n    }, [props.bakarim])\n\n    const [consJumbo, setConsJumbo] = useState()\n    const handleChangeWeek = (e) => {\n        setShowAlert2(false)\n        setWeek(e.target.value)\n        setConsJumbo(<ShowConstraintOf week={e.target.value} items={empConstraints} bakarim={props.bakarim}/>)\n    }\n\n    const [_88count, set88Count] = useState(0)\n\n    const [isModalShown, setShowModal] = useState(false)\n    const hideModal = () => {\n        setShowModal(false)\n        window.location.reload()\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        let data = new FormData(form.current)\n        fetch('/submitschedule', {method: 'POST', body: data})\n        .then(res => res)\n        .then(data => setShowModal(true))\n        .catch(error => alert('משהו נדפק, המשמרות לא הוגשו בהצלחה :('))\n    }\n\n    return (\n        !isLoaded ? \n            <Spinner animation=\"border\" variant=\"primary\"/>\n        :\n        showAlert3 ? \n            <NoBakarimDBAlert />\n        :\n        <main>\n            <SuccessModal show={isModalShown} handleClose={hideModal} />\n            <NoShiftsAlert bakarim={remain_bakarim} week={week}/>\n            <NoSubmitAlert showAlert={showAlert2} />\n            <_88Alert count={_88count} />\n            <Jumbotron>\n                <Container fluid>\n                    <Form ref={form} onSubmit={handleSubmit} method=\"post\">\n                        <Form.Group>\n                            <Form.Row>\n                                <Col sm=\"6\"><h3>הכנת הסידור לשבוע: </h3></Col>        \n                                <Col sm=\"6\"><ChooseWeek week={week} defaultWeek={1} onChange={handleChangeWeek}/></Col>\n                            </Form.Row>\n                            <Form.Row>\n                                    <Form.Check\n                                        type=\"switch\"\n                                        label=\"התעלם מאילוצים\"\n                                        id=\"ignore\"\n                                        checked={ignore}\n                                        onClick={(e) => setIgnore(!ignore)}/>\n                            </Form.Row>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Row>\n                                <Col sm=\"12\">\n                                    {(windowWidth > minWindowSize) ?\n                                        <Table\n                                            data={data}\n                                            week={week}\n                                            bakarim={props.bakarim}\n                                            dictionary={props.dictionary}\n                                            setShowAlert2={(e) => setShowAlert2(e)}\n                                            ignore={ignore}\n                                            />\n                                    :\n                                        <>\n                                            <h2>תגדיל ת'חלון אבא</h2>\n                                            <input style={{display: \"none\"}} required/>\n                                        </>\n                                    }\n                                </Col>\n                            </Form.Row>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Row>\n                                <Form.Label>הערות: </Form.Label>\n                                <Form.Control as='textarea' name='comments' rows=\"3\" />\n                            </Form.Row>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Row>\n                                <Col />\n                                    <Button variant=\"outline-primary\" type=\"submit\">שגר!</Button>\n                                <Col />\n                            </Form.Row>\n                        </Form.Group>\n                    </Form>\n                </Container>\n            </Jumbotron>\n            <Jumbotron>\n                {consJumbo}\n            </Jumbotron>\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport { getCurrentMonth } from '../../scripts.js'\nimport { Jumbotron, Form } from 'react-bootstrap'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nfunction App(props) {\n    return (\n        <main className=\"App\">\n            <Jumbotron>\n                <Container>\n                    <Row>\n                        <Col sm=\"1\"/>\n                        <Col sm=\"5\"><h3>טבלת מיוחדים לחודש: </h3></Col>\n                        <Col sm=\"5\">\n                            <Form.Control\n                                type='month'\n                                name=\"name\"\n                                defaultValue={getCurrentMonth()}\n                            />\n                        </Col>\n                        <Col sm=\"1\"/>\n                    </Row>\n                    <Row>\n                        {/*TODO: import relevant specials-table from database*/}\n                    </Row>\n                </Container>\n            </Jumbotron>\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport Pagination from 'react-bootstrap/Pagination'\n\nfunction App(props) {\n    const {items, itemsPerPage, curPage, setCurPage, pagesPerSection, curSection, setCurSection} = props\n    const maxPage = Math.max(0, Math.floor((items.length - 1) / itemsPerPage))\n    const maxSection = Math.max(0, Math.floor((maxPage - 1) / pagesPerSection))\n\n    const setFirstPage = () => {\n        setCurPage(0)\n        setCurSection(0)\n    }\n\n    const setPrevPage = () => {\n        let newPage = Math.max(curPage - 1, 0)\n        setCurPage(newPage)\n        setCurSection(Math.floor(newPage / pagesPerSection))\n    }\n\n    const setPrevSection = () => {\n        let newSection = Math.max(curSection - 1, 0)\n        setCurSection(newSection)\n        setCurPage((newSection + 1) * pagesPerSection - 1)\n    }\n\n    const setNextSection = () => {\n        let newSection = Math.min(curSection + 1, maxSection)\n        setCurSection(newSection)\n        setCurPage(newSection * pagesPerSection)\n    }\n\n    const setNextPage = () => {\n        let newPage = Math.min(curPage + 1, maxPage)\n        setCurPage(newPage)\n        setCurSection(Math.floor(newPage / pagesPerSection))\n    }\n\n    const setLastPage = () => {\n        setCurPage(maxPage)\n        setCurSection(maxSection)\n    }\n\n    return (\n        <Pagination dir=\"ltr\">\n            <Pagination.First onClick={setFirstPage} />\n            <Pagination.Prev onClick={setPrevPage} />\n            {curSection !== 0 &&\n                <>\n                    <Pagination.Item\n                        key={0}\n                        active={0 === curPage}\n                        onClick={() => setCurPage(0)}>\n                            {1}\n                    </Pagination.Item>\n                    <Pagination.Ellipsis onClick={setPrevSection} />\n                </>\n            }\n            {items.filter((shift, shiftID) => shiftID % itemsPerPage === 0)\n                    .filter((shift, page) => page < pagesPerSection * (curSection + 1) && page >= pagesPerSection * curSection)\n                    .map((shift, index) =>\n                <Pagination.Item\n                    key={index + (curSection * pagesPerSection)}\n                    active={(index + (curSection * pagesPerSection)) === curPage}\n                    onClick={() => setCurPage(index + (curSection * pagesPerSection))}>\n                        {index + (curSection * pagesPerSection) + 1}\n                </Pagination.Item>\n            )}\n            {curSection !== maxSection &&\n                <>\n                    <Pagination.Ellipsis onClick={setNextSection} />\n                    <Pagination.Item\n                        key={maxPage}\n                        active={(maxPage) === curPage}\n                        onClick={() => setCurPage(maxPage)}>\n                            {maxPage + 1}\n                    </Pagination.Item>\n                </>\n            }\n            <Pagination.Next onClick={setNextPage} />\n            <Pagination.Last onClick={setLastPage} />\n        </Pagination>\n    );\n}\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\nimport ChooseBakar from '../general/chooseBakar.js';\nimport ChooseWeek from '../general/chooseWeek.js';\nimport { Jumbotron, Container, Row, Col, Form } from 'react-bootstrap';\nimport BlocksTable from './blocks-table/Table'\nimport { getWeek } from '../../scripts'\nimport Pagination from '../general/Pagination'\n\nfunction App(props) {\n    const [items, setItems] = useState([])\n    const [curPage, setCurPage] = useState(0)\n    const [curSection, setCurSection] = useState(0)\n    const itemsPerPage = 1\n    const pagesPerSection = 5\n\n    const handleChangeWeek = (e) => {\n        if (e == null) return\n        let week = (typeof e == typeof 'string') ? e : e.target.value\n        fetch(\"/weekconstraints?week=\"+week, {method: 'GET'})\n        .then(res => res.json())\n        .then((result) => {\n            setItems(result['week_constraints'])\n            setCurPage(0)\n            setCurSection(0)\n        })\n        .catch(error => {\n            setItems([])\n            alert(\"couln't import week's constraints from DB: \" + error)\n        })\n    }\n\n    const handleChangeEmp = (e) => {\n        if (e == null) return\n        let name = (typeof e == typeof 'string') ? e : e.target.value\n        fetch(\"/empconstraints?name=\"+name, {method: 'GET'})\n        .then(res => res.json())\n        .then((result) => {\n            setItems(result['emp_constraints'])\n            setCurPage(0)\n            setCurSection(0)\n        })\n        .catch(error => {\n            setItems([])\n            alert(\"couln't import employees' constraints from DB: \" + error)\n        })\n    }\n\n    const [secondSelect, setSecondSelect] = useState(0)\n    // 0 = choose week, 1 = choose bakar\n\n    useEffect(() => {\n        handleChangeWeek(getWeek(1))\n    }, [])\n\n    const handleChange = (e) => {\n        setSecondSelect(e.target.value)\n        e.target.value === '1' ?\n            setItems([])\n        :\n            handleChangeWeek(getWeek(1))\n    }\n\n    const pagination = <Pagination\n                            items={items}\n                            itemsPerPage={itemsPerPage}\n                            curPage={curPage}\n                            setCurPage={setCurPage}\n                            pagesPerSection={pagesPerSection}\n                            curSection={curSection}\n                            setCurSection={setCurSection} />\n    \n    return (\n        <main className=\"App\">\n            <Jumbotron>\n                <Container>\n                    <Row>\n                        <Col sm=\"2\"/>\n                        <Col sm=\"8\"><h2>טבלת אילוצים מורחבת</h2></Col>\n                        <Col sm=\"2\"/>\n                    </Row>\n                    <br></br>\n                    <Row>\n                        <Col sm=\"2\">\n                            <Form.Label>הצג את: </Form.Label>\n                        </Col>\n                        <Col sm=\"5\">\n                            <Form.Control as=\"select\" onChange={handleChange} autofocus>\n                                <option value=\"0\">כל המשמרות בשבוע מסוים</option>\n                                <option value=\"1\">כל המשמרות של בקר מסוים</option>\n                            </Form.Control>\n                        </Col>\n                        <Col sm=\"5\">\n                            {secondSelect == 0 ?\n                                <ChooseWeek defaultWeek={1} onChange={handleChangeWeek}/>\n                            :\n                                <ChooseBakar title=\"בחר בקר/ית: \" bakarim={props.bakarim.map(val => val.full_name)} onChange={handleChangeEmp} showChooseBakar/>\n                            }\n                        </Col>\n                    </Row>\n                    <br></br>\n                    {items && (secondSelect == 1 ?\n                                items.filter((item, index) => index >= curPage * itemsPerPage && index < (curPage + 1) * itemsPerPage)\n                            :\n                                items).map(value => \n                            <>\n                                <Row>\n                                    <BlocksTable\n                                        name={value.name}\n                                        week={value.week}\n                                        blocks={value.shifts}\n                                        comments={value.comments}/>\n                                </Row>\n                                <hr/>\n                            </>\n                        )\n                    }\n                    {secondSelect == 1 && pagination}\n                </Container>\n            </Jumbotron>\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\n\nfunction App(props) {\n  let id = props.id\n  if (props.header === 'ערב') id++\n  else if (props.header === 'לילה') id += 2\n\n  return (\n    <td className=\"shifts-td\">\n      { props.shifts[id] && props.shifts[id].map(shift => \n        <p className=\"shifts-bakar\" style={{backgroundColor: props.dictionary[shift['label']]}}>{shift['label']}</p>\n      )}\n    </td>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport Item from './Table Item';\n\nfunction App(props) {\n  const numbers = [0, 3, 6, 9, 12, 15, 18];\n  const listItems = numbers.map((i) =>\n    <Item header={props.header} id={i} shifts={props.shifts} dictionary={props.dictionary}/>\n  )\n\n  return (\n    <tr>\n      <th>{props.header}</th>\n      {listItems}\n    </tr>\n  );\n}\n\nexport default App;\n","import React, {useState} from 'react'\nimport Row from './Table Row.js'\nimport Table from 'react-bootstrap/Table'\nimport { Form } from 'react-bootstrap'\nimport './jump.css'\n\nfunction App(props) {\n  const shifts = [\"בוקר\", \"ערב\", \"לילה\"]\n  const days = [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"]\n  const [style, setStyle] = useState('ready-table')\n\n  const switchStyle = () => {\n    setStyle(style === 'ready-table' ? 'ready-table box bounce-7' : 'ready-table')\n  }\n\n  return (\n    <div className={style}>\n      <Table striped bordered hover>\n        <tr>\n          <th onDoubleClick={switchStyle}></th>\n          {days.map(day => \n            <th>{day}</th>\n          )}\n        </tr>\n\n        {shifts.map((shift) => \n          <Row header={shift} shifts={props.shifts} dictionary={props.dictionary}/>\n        )}\n\n      </Table>\n      <Form.Control\n        as=\"textarea\"\n        className=\"unresizeable\"\n        disabled>{props.comments}</Form.Control>\n\n      {style !== 'ready-table' && \n      <>\n        <br/>\n        <h6 dir='ltr'>Special thanks to Bana ♥</h6>\n      </>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\n\nfunction App(props) {\n  const {counts, _88, specials, dictionary} = props\n\n  return (\n    <div className=\"mini-table\">\n      <Table striped bordered hover>\n        <tr>\n          <th>בקר</th>\n          <th>משמרות</th>\n          <th>8-8</th>\n          <th>מיוחדות</th>\n        </tr>\n\n        {counts && Object.keys(counts).map(name =>\n          <tr>\n            <td style={{backgroundColor: dictionary[name]}}>{name}</td>\n            <td>{counts[name]}</td>\n            <td>{_88[name] || 0}</td>\n            <td>{specials[name] || 0}</td>\n          </tr>\n        )}\n\n      </Table>\n    </div>\n  );\n}\n\nexport default App;\n","import React, {useState} from 'react'\nimport ShiftsTable from './shifts-table/Table'\nimport MiniTable from './mini-table/Table'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n//import Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Pagination from '../general/Pagination'\nimport { weekToString } from '../../scripts'\n\nfunction App(props) {\n    const shifts = props.shifts\n\n    const [curPage, setCurPage] = useState(0)\n    const [curSection, setCurSection] = useState(0)\n    const shiftsPerPage = 1\n    const pagesPerSection = 5\n    const pagination = <Pagination\n                            items={shifts}\n                            itemsPerPage={shiftsPerPage}\n                            curPage={curPage}\n                            setCurPage={setCurPage}\n                            pagesPerSection={pagesPerSection}\n                            curSection={curSection}\n                            setCurSection={setCurSection} />\n\n    return (\n        <main className=\"App\">\n            {pagination}\n            <Jumbotron>\n                <Row>\n                    <Col sm=\"12\"><h2>היסטורית סידורים</h2></Col>\n                </Row>\n                {shifts.filter((shift, index) =>\n                    index >= curPage * shiftsPerPage && index < (curPage + 1) * shiftsPerPage)\n                        .map((shift, index) => \n                            <>\n                                <Row>\n                                    <Col ><h5>טבלת המשמרות לשבוע {shift.week.slice(6,8)} בתאריכים {weekToString(shift.week)}</h5></Col>\n                                </Row>\n                                <Row>\n                                    <ShiftsTable\n                                        shifts={shift.shifts}\n                                        comments={shift.comments}\n                                        dictionary={props.dictionary} />\n                                    <MiniTable\n                                        counts={shift.shift_counts}\n                                        _88={shift._8_8_shifts}\n                                        specials={shift.specials}\n                                        dictionary={props.dictionary} />\n                                </Row>\n                                <hr/>\n                            </>\n                        )\n                }\n                <Row>\n                    {pagination}\n                </Row>\n            </Jumbotron>\n        </main>\n    );\n}\n\nexport default App;\n","import React, {useState, useEffect} from 'react'\nimport Header from '../general/Header'\nimport Tab1 from \"./Tab1/Tab1-construction\"\nimport Tab2 from \"./Tab2-specials\"\nimport Tab3 from \"./Tab3-constraints\"\nimport Tab4 from \"./Tab4-history\"\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nfunction App() {\n  const [key, setKey] = useState('1')\n  const [bakarim, setBakarim] = useState([])\n  const [shifts, setShifts] = useState([])\n  const [dictionary, setDict] = useState({})\n  useEffect(() => {\n    fetch('/getEmpsAndScheds', {method: 'GET'})\n    .then(res => res.json())\n    .then(data => {\n        setShifts(data['schedules'])\n        let emps = data['employees']\n        setBakarim(emps)\n\n        let dict = {}\n        emps && emps.map(value => {\n            dict[value.full_name] = value.color\n            dict[value.short_name] = value.color\n            dict[\"short \" + value.full_name] = value.short_name\n            return void 0\n        })\n        setDict(dict)\n    })\n    .catch(error => {\n        alert(\"couldn't get bakarim or schedules from DB: \" + error)\n    })\n  }, [])\n\n\n  return (\n    <div>\n      <Header title=\"טופס ניהול משמרות\" />\n\n      <Tabs\n        style={{margin: \"auto auto 10px auto\", maxWidth: \"1420px\"}}\n        defaultActiveKey={key}\n        activeKey={key}\n        onSelect={(k) => setKey(k)}\n      >\n        <Tab eventKey=\"1\" title=\"הכנת סידור\"><Tab1 bakarim={bakarim} dictionary={dictionary}/></Tab>\n        <Tab eventKey=\"2\" title=\"מיוחדים\"><Tab2 /></Tab>\n        <Tab eventKey=\"3\" title=\"אילוצים\"><Tab3 bakarim={bakarim} /></Tab>\n        <Tab eventKey=\"4\" title=\"היסטוריה\"><Tab4 bakarim={bakarim} shifts={shifts} dictionary={dictionary}/></Tab>\n      </Tabs>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React, {useState} from 'react'\nimport {Button, Form} from 'react-bootstrap'\n\nfunction App(props) {\n    const {data, lineNumber, isEditable, removeSelf} = props\n    const { full_name, short_name, color } = data\n    const id = lineNumber - 1\n    \n    const [fullName, setFullName] = useState(full_name)\n    const [shortName, setShortName] = useState(short_name)\n    const [backGroundColor, setBGColor] = useState(color)\n    const handleChange = (e) => {\n        //e.target.className = e.target.value != e.target.defaultValue ? \"form-control text-danger\" : \"form-control\"\n        switch (e.target.id) {\n            case \"fullName\":\n                setFullName(e.target.value);\n                e.target.className = e.target.value !== full_name ? \"form-control text-danger\" : \"form-control\"\n                break;\n            case \"shortName\":\n                setShortName(e.target.value);\n                e.target.className = e.target.value !== short_name ? \"form-control text-danger\" : \"form-control\"\n                break;\n            case \"color\":\n                setBGColor(e.target.value);\n                break;\n            default:\n                break;\n        }\n    }\n\n    return (\n        <tr>\n            <td>{lineNumber}.</td>\n            <td>\n                <Form.Control\n                    name={\"full_name-\"+id}\n                    id={\"fullName\"}\n                    placeholder=\"לדוגמא: אחשוורוש המלך\"\n                    value={fullName}\n                    maxLength={24}\n                    style={{backgroundColor: backGroundColor}}\n                    disabled={!isEditable}\n                    onChange={handleChange}/>\n            </td>\n            <td>\n                <Form.Control\n                    name={\"short_name-\"+id}\n                    id={\"shortName\"}\n                    placeholder=\"לדוגמא: אחשווי\"\n                    value={shortName}\n                    maxLength={8}\n                    style={{backgroundColor: backGroundColor}}\n                    disabled={!isEditable}\n                    onChange={handleChange} />\n            </td>\n            <td>\n                <Form.Control\n                    type=\"color\"\n                    name={\"color-\"+id}\n                    id={\"color\"}\n                    style={{padding: \"3px\", width: \"36px\", margin: \"auto\"}}\n                    value={backGroundColor}\n                    onChange={handleChange}\n                    disabled={!isEditable}/>\n            </td>\n            {isEditable && <td><Button variant=\"outline-danger\" onClick={removeSelf}>הסר</Button></td>}\n        </tr>\n    );\n}\n\nexport default App;\n","import React, {useState, useEffect, useRef} from 'react'\nimport {Jumbotron, Container, Row, Col, Table, Button, Form} from 'react-bootstrap'\nimport _ from 'lodash'\nimport Item from './List Item'\n\nfunction App() {\n    const form = useRef()\n    const [bakarim, setBakarim] = useState([])\n    const [original, setOriginal] = useState()\n    const [isEditable, setisEditable] = useState(false)\n\n    useEffect(() => {\n        fetch('/getemployees', {method: 'GET'})\n        .then(res => res.json())\n        .then(data => {\n            setBakarim(data['all_emps'])\n            setOriginal(_.clone(data['all_emps']))\n        })\n        .catch(error => alert(error))\n    }, [])\n\n    const saveChanges = (e) => {\n        let length = bakarim ? bakarim.length : 0\n        let data = new FormData(form.current)\n        fetch('/submitemployees?num_of_emps='+length, {method: 'POST', body: data})\n        .then(res => res)\n        .then(data => {\n        })\n        .catch(error => alert(error))\n\n        setisEditable(false)\n    }\n\n    const cancelChanges = () => {\n        setBakarim(original)\n        setisEditable(false)\n    }\n\n    const addBakar = () => {\n        setBakarim([...bakarim, {}])\n    }\n\n    const removeBakar = (id) => {\n        let newBakarim = bakarim.filter((val, key) => key !== id)\n        setBakarim(newBakarim)\n    }\n\n    return (\n        <main>\n            <Jumbotron>\n                <Container fluid>\n                    <Form ref={form} onSubmit={saveChanges}>\n                        <Row>\n                            <Col md=\"12\"><h3 onClick={() => alert(JSON.stringify(bakarim))}>רשימת בקרים</h3></Col>\n                        </Row>\n                        <Row>\n                            {!isEditable ?\n                                <Button variant=\"outline-primary\" onClick={() => /*setisEditable(true)*/ alert(\"Work In Progress\")}>ערוך</Button>\n                            :\n                                <>\n                                    <br />\n                                    <Button variant=\"outline-success\" type=\"submit\">שמירה</Button>\n                                    <Button variant=\"outline-secondary\" onClick={cancelChanges}>ביטול</Button>\n                                </>\n                            }\n                        </Row>\n                        <Row className='text-align-right'>\n                            <Table striped bordered hover>\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th>שם מלא</th>\n                                        <th>שם מקוצר</th>\n                                        <th>צבע</th>\n                                        {isEditable && bakarim.length > 0 && <th/>}\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {bakarim.map((bakar, index) => (\n                                        <Item\n                                            data={bakar}\n                                            lineNumber={index+1}\n                                            isEditable={isEditable}\n                                            removeSelf={() => removeBakar(index)} />\n                                    ))}\n                                    {isEditable &&\n                                        <tr>\n                                            <td />\n                                            <td><Button variant=\"outline-primary\" onClick={addBakar}>הוסף בקר חדש</Button></td>\n                                            <td />\n                                            {bakarim.length > 0 && <td />}\n                                            <td />\n                                        </tr>\n                                    }\n                                </tbody>\n                            </Table>\n                        </Row>\n                    </Form>\n                </Container>\n            </Jumbotron>\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react'\nimport Header from '../general/Header'\nimport Main from \"./Main\"\n\nfunction App() {\n  return (\n    <div>\n      <Header title=\"דף אדמין\" />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nfunction App() {\n  return (\n    <div dir=\"ltr\">\n      <h1>404</h1>\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react'\nimport Footer from './components/general/Footer'\nimport Submission from './components/page-submissions/App'\nimport Management from './components/page-management/App'\nimport AdminPage from './components/page-admin/App'\nimport PageNotFound from './components/general/PageNotFound'\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport { routeURLs as url } from './config';\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path='/'><Redirect to={url.submissionPage} /></Route>\n                    <Route exact path={url.submissionPage} component={Submission} />\n                    <Route exact path={url.managementPage} component={Management} />\n                    <Route exact path={url.adminPage} component={AdminPage} />\n                    <Route component={PageNotFound} />\n                </Switch>\n                <Footer/>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}